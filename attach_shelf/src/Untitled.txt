const auto & q = odom_msg->pose.pose.orientation;   // message quaternion

tf2::Quaternion q_tf;                               // 1) make TF2 quaternion
tf2::fromMsg(q, q_tf);                              // 2) convert message -> TF2
if (q_tf.length2() > 0.0) q_tf.normalize();         // 3) (safe) normalize

double roll, pitch, yaw;
tf2::Matrix3x3(q_tf).getRPY(roll, pitch, yaw);      // 4) get roll/pitch/yaw

current_yaw_ = normAng(yaw);                        // 5) keep yaw in [-pi, pi]
odom_ok_ = true;                                    // 6) mark odom valid
